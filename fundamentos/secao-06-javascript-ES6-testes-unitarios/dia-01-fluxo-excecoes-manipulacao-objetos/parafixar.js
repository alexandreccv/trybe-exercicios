/**Para fixar

Utilizando o fluxo de exce√ß√£o no exemplo do Trybe Sporting Goods
Crie a fun√ß√£o checkValidRange, que dever√° ser respons√°vel por verificar se o valor inserido no input de n√∫mero est√° no intervalo
 de 1 a 10.
Para praticar, considere o exemplo de um boletim escolar
Implemente uma l√≥gica que verifique a m√©dia da pessoa estudante. Para isso, considere as seguintes informa√ß√µes:
Escreva uma fun√ß√£o que receba, como par√¢metro, 4 valores do tipo number. Caso o valor recebido como par√¢metro n√£o seja do tipo 
number, lance uma exce√ß√£o.
Lembre-se de quebrar problemas grandes em partes menores, a fim de facilitar sua manuten√ß√£o e seu entendimento.
De olho na dica üëÄ: Aproveite para colocar em pr√°tica o uso do throw e try/catch. */

checkValidRange(number);

const checkValidRange = (number) => {
  if (number < 1 || number > 10) {
    throw new Error('√â necessario digitar um n√∫mero entre 1 e 10');
  }
}

const validateAverage = (n1, n2, n3, n4) => {
  if (typeof n1 !== 'number' || typeof n2 !== 'number' || typeof n3 !== 'number' || typeof n4 !== 'number') {
    throw new Error('Aten√ß√£o! Os valores devem ser num√©ricos');
  }
}

const calculateAverage = (n1, n2, n3, n4) => {
  try {
    validateAverage(n1, n2, n3, n4);
    let sum = n1 + n2 + n3 + n4;
    let media = sum / 4;
    return media;
  } catch (error) {
    return error.message;
  }  
}
console.log(calculateAverage(5, 6, 7, '8')) // Aten√ß√£o! Os valores devem ser num√©ricos